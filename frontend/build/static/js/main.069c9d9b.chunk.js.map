{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","App.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","description","to","onClick","bind","Component","connect","window","confirm","delete","CreateProjectButton","Dashboard","getProjects","projects","map","key","state","get","res","Header","data-toggle","data-target","href","AddProject","start_date","end_date","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","combineReducers","action","filter","middleware","thunk","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","UpdateProject","match","params","getProject","updateProject","propType","PropTypes","func","isRequired","object","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.069c9d9b.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./types\";\n\nexport const createProject = (project, history) => async (dispatch) => {\n  try {\n    const res = await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {},\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data,\n    });\n  }\n};\n\nexport const getProjects = () => async (dispatch) => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: GET_PROJECTS,\n    payload: res.data,\n  });\n};\n\nexport const getProject = (id, history) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data,\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = (id) => async (dispatch) => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: DELETE_PROJECT,\n      payload: id,\n    });\n  }\n};\n","export const GET_ERRORS = \"GET_ERRORS\";\nexport const GET_PROJECTS = \"GET_PROJECTS\";\nexport const GET_PROJECT = \"GET_PROJECT\";\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectActions\";\n\nclass ProjectItem extends Component {\n  onDeleteClick = (id) => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <>\n        <div className=\"container\">\n          <div className=\"card card-body bg-light mb-3\">\n            <div className=\"row\">\n              <div className=\"col-2\">\n                <span className=\"mx-auto\">{project.projectIdentifier}</span>\n              </div>\n              <div className=\"col-lg-6 col-md-4 col-8\">\n                <h3>{project.projectName}</h3>\n                <p>{project.description}</p>\n              </div>\n              <div className=\"col-md-4 d-none d-lg-block\">\n                <ul className=\"list-group\">\n                  <Link to=\"#\">\n                    <li className=\"list-group-item board\">\n                      <i className=\"fa fa-flag-checkered pr-1\">\n                        {\" \"}\n                        Project Board{\" \"}\n                      </i>\n                    </li>\n                  </Link>\n                  <Link to={`/updateProject/${project.projectIdentifier}`}>\n                    <li className=\"list-group-item update\">\n                      <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                    </li>\n                  </Link>\n\n                  <li\n                    className=\"list-group-item delete\"\n                    onClick={this.onDeleteClick.bind(\n                      this,\n                      project.projectIdentifier\n                    )}\n                  >\n                    <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteProject })(ProjectItem);\n","import React, { Fragment } from 'react'\nimport {Link} from \"react-router-dom\";\n const CreateProjectButton = () => {\n  return (\n    <Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n                  Create a Project\n                </Link>\n    </Fragment>\n  )\n}\n\nexport default CreateProjectButton;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectActions\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n\n    const {projects} = this.props.project;\n\n\n    return (\n      <>\n        <div className=\"projects\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <h1 className=\"display-4 text-center\">Projects</h1>\n                <br />\n                <CreateProjectButton />\n                <br />\n                <hr />\n                {\n                  projects.map(project => (\n                    <ProjectItem key={project.id} project={project}/>\n                  ))\n                }\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project,\n});\n\nexport default connect(mapStateToProps, { getProjects })(Dashboard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nclass Header extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n          <div className=\"container\">\n            <Link className=\"navbar-brand\" to=\"/dashboard\">\n              Kanban Tool\n            </Link>\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#mobile-nav\"\n            >\n              <span className=\"navbar-toggler-icon\" />\n            </button>\n\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" to=\"/dashboard\">\n                    Dashboard\n                  </Link>\n                </li>\n              </ul>\n\n              <ul className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link \" href=\"/register\">\n                    Sign Up\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <Link className=\"nav-link\" href=\"/login\">\n                    Login\n                  </Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectActions\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(newProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">\n                  Create / Edit Project form\n                </h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { createProject })(AddProject);\n","import { GET_ERRORS } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {},\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return {\n        ...state,\n        projects: action.payload,\n      };\n\n    case GET_PROJECT:\n      return {\n        ...state,\n        project: action.payload,\n      };\n\n    case DELETE_PROJECT:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          (project) => project.projectIdentifier !== action.payload\n        ),\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nlet store;\n\nif (window.navigator.userAgent.includes(\"Chrome\")) {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n      applyMiddleware(...middleware),\n      window.__REDUX_DEVTOOLS_EXTENSION__ &&\n        window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initialState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectActions\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {},\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date,\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    const { history } = this.props;\n\n    this.props.getProject(id, history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date,\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Update Project</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName,\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier,\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description,\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    ></textarea>\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProject.propType = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  project: state.project.project,\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps, { getProject, createProject })(\n  UpdateProject\n);\n","import React from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/addProject\" component={AddProject} />\n          <Route exact path=\"/updateProject/:id\" component={UpdateProject} />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}